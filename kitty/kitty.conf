# vim:ft=config

# include ./themes/gruvbox.conf
include ./themes/tokyonight.conf

term xterm-kitty

font_family      JetBrains Mono Medium
bold_font        auto
italic_font      auto
bold_italic_font auto

adjust_line_height 1
adjust_column_width 0

# wide-screen-monitors
# font_size 12.50
# window_padding_width 5 240 5 240

enable_audio_bell no

# laptops, regular-monitors
font_size 11.50
window_padding_width 5 5 5 5

background_opacity 1.0
# mouse_hide_wait 1.0

# Cursor
cursor_shape block
shell_integration disabled

#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.

detect_urls yes

#: Delay (in milliseconds) between screen updates. Decreasing it,
#: increases frames-per-second (FPS) at the cost of more CPU usage.
#: The default value yields ~100 FPS which is more than sufficient for
#: most uses. Note that to actually achieve 100 FPS you have to either
#: set sync_to_monitor to no or use a monitor with a high refresh
#: rate. Also, to minimize latency when there is pending input to be
#: processed, repaint_delay is ignored.

repaint_delay 10

#: Delay (in milliseconds) before input from the program running in
#: the terminal is processed. Note that decreasing it will increase
#: responsiveness, but also increase CPU usage and might cause flicker
#: in full screen programs that redraw the entire screen on each loop,
#: because kitty is so fast that partial screen updates will be drawn.

input_delay 3

#: Sync screen updates to the refresh rate of the monitor. This
#: prevents tearing (https://en.wikipedia.org/wiki/Screen_tearing)
#: when scrolling. However, it limits the rendering speed to the
#: refresh rate of your monitor. With a very high speed mouse/high
#: keyboard repeat rate, you may notice some slight input latency. If
#: so, set this to no.

sync_to_monitor yes

# OS Specific
macos_thicken_font 0.5

#########################################
# Keybindings
#########################################


map ctrl+c copy_and_clear_or_interrupt
map ctrl+v paste_from_clipboard

map ctrl+- change_font_size all -0.25
map ctrl++ change_font_size all +0.25

dynamic_background_opacity yes
map cmd+- set_background_opacity -0.1
map cmd++ set_background_opacity +0.1

map ctrl+. kitten unicode_input

#########################################
# Keybindings (Like Tmux)
#########################################

# load config file
map ctrl+, load_config_file

# layout splits (like tmux) 
# https://sw.kovidgoyal.net/kitty/layouts/#the-splits-layout
enabled_layouts splits

# layout creation
map ctrl+0x61>- launch --location=hsplit --cwd=current
map ctrl+0x61>\ launch --location=vsplit --cwd=current

# layout management like tmux
map ctrl+0x61>h neighboring_window left
map ctrl+0x61>l neighboring_window right
map ctrl+0x61>k neighboring_window up
map ctrl+0x61>j neighboring_window down

# Scrollback search buffer
map ctrl+0x61>f show_scrollback
map ctrl+0x61>g launch --type overlay --title='Lazygit' --cwd=current lazygit
map ctrl+0x61>d launch --type overlay --title='Lazydocker' --cwd=current lazydocker

# tab navigation
map ctrl+0x61>c launch --cwd=current --type=tab
map ctrl+0x61>n next_tab
map ctrl+0x61>p previous_tab
map ctrl+0x61>r set_tab_title
map ctrl+0x61>w close_window
map ctrl+0x61>z toggle_layout stack # this does not work? :(
map ctrl+0x61>: kitty_shell window

# tab management to 1, 2, 3, 4, 5, 6, 7, 8, 9
map ctrl+0x61>1 goto_tab 1
map ctrl+0x61>2 goto_tab 2
map ctrl+0x61>3 goto_tab 3
map ctrl+0x61>4 goto_tab 4
map ctrl+0x61>5 goto_tab 5
map ctrl+0x61>6 goto_tab 6
map ctrl+0x61>7 goto_tab 7
map ctrl+0x61>8 goto_tab 8
map ctrl+0x61>9 goto_tab 9

# move tab to the left
map ctrl+0x61>, move_tab_backward
map ctrl+0x61>. move_tab_forward
