#!/bin/bash

# Your zet workflow:
#
# format: this-is-a-note.isotime.md
#
# [ ] Linking:          Link two zets w/ the $isotime (copy it w/ tmux selection)
# [ ] Progress:         Tells you how much time you've worked in the past
#                       week, month, year. Metrics for pomodoro
# [ ] Orphans:          Finds all the notes that are orphans, notes that are
#                       orphans don't contain "# Links" at the bottom of the file
# [X] Query:            Use grep for full-text search by multiple keywords
# [X] Open Note:        Open fily by iso time
# [X] Daily:            Zet Journal for managing your shit (pomo)

ZET="${HOME}/zet"
INBOX="${ZET}/inbox"
BOOKS="${ZET}/books"

print_help() {
  printf "
Zettelkasten program
It is organized by inbox & permanent notes.

Commands:
  --help | -h           Show help commands
  f | find              Finds a note by regex on a fzf panel
  q | query             Queries the zettels with Regex, you can filter by tags.
  nb | new-book         Creates a new file for book anotations.

"
}

# Creates a new file on the /inbox w/ a template.
zet_new() {
  fileName=$(echo "$@" | sed "s/[?|!]//g" | sed "s/ /-/g" | tr "[:upper:]" "[:lower:]")
  file="${INBOX}/${fileName}.$(isosec).md"

  tee "$file" <<EOF >/dev/null
# $@

# Bibliography
EOF

  vi +2 "$file"
}

# Creates a new file on the /books w/ a template.
zet_newbook() {
  fileName=$(echo "$@" | sed "s/[?|!]//g" | sed "s/ /-/g" | tr "[:upper:]" "[:lower:]")
  file="${BOOKS}/${fileName}.md"

  # Create the note with the $fileName
  tee "$file" <<EOF >/dev/null
# $@

EOF

  vi +2 "$file"
}

zet_query() {
  query="$@"
  # color: gives colored output
  # R: recursive find files
  # n: display line numbers
  # i: ignore case
  # -m NUM: Stops reading a file after NUM matching lines
  # w: exact matches in a file
  cd "$INBOX" && grep --color -Rni -m 1 -w "$query" && cd - >/dev/null || exit
}

#
# Zet Commands
#
case $1 in
-h | --help)
  print_help
  exit 0
  ;;
"")
  print_help
  exit 0
  ;;
q | query)
  zet_query "${@:2}"
  exit 0
  ;;
nb | new-book)
  zet_newbook "${@:2}"
  exit 0
  ;;
esac

# Checks if the first given argument is a valid id.
# If it is a zet file, it will open it, otherwise creates a new file
firstArg="$(find "$INBOX" -name "*.${1}.md")"
if [ -n "$firstArg" ]; then
  vim "$firstArg"
else
  zet_new "$@"
fi
