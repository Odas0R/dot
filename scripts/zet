#!/bin/sh

# Zettelkasten + FZF
#
# 1. Automatic Note Creation w/ isotime
# 2. Link notes
# 3. Add tags to notes
# 4. Automatic github Sync

# The query command will depend on fzf. You can use a filter to exclude &
# include zettels by tags.

# Commands
# new | n -> create a new note on inbox/
# query | q -> find notes w/ regex
# link | l -> link 2 zettels together ?
# rm-link | rml -> remove
# ls -> list all notes ?

ZETTELKASTEN="${HOME}/zet"
INBOX="${ZETTELKASTEN}/inbox"

print_help() {
  printf "%s
Zettelkasten program
It is organized by inbox & permanent notes.

Commands:
  --help | -h      Show help commands
  new | n          Create a new note
  link | l         Link two notes
  rm-link | rml    Remove two links
  hub | h          Opens the hub zettel
  query | q        Queries the zettels with Regex, you can filter by tags.
"
}

# Zettelkasten new note template
zet_new() {
  local fileName=$(isosec)
  local file="${fileName}.md"

  tee "${INBOX}/${file}" <<EOF >/dev/null
**links:**
**tags:**

# Add a title

EOF
}

zet_link() {
  local file1Basename=$(basename -s '.md' $2)
  local file2Basename=$(basename -s '.md' $3)

  local file1="[${file1Basename}](${file1Basename})"
  local file2="[${file2Basename}](${file2Basename})"

  local existsLinkOnFile1=$(cat $2 | grep -c "$file2Basename")
  local existsLinkOnFile2=$(cat $3 | grep -c "$file1Basename")

  # Check if file1 has a link of file2
  if [ $existsLinkOnFile1 -eq 1 ]; then
    printf "$file1Basename already is linked to $file2Basename\n"
    if [ $existsLinkOnFile2 -eq 0 ]; then
      read -p "$file2Basename does not contain a link back, do you want to fix? [Y/y]" yes
      case "${yes}" in
      y | Y)
        # Append link on the file 2
        sed -i "1s/$/ ${file1}/" $3
        ;;
      esac
    fi
    exit 0
  fi

  # Check if file2 has a link of file1
  if [ $existsLinkOnFile2 -eq 1 ]; then
    printf "$file2Basename already is linked to $file1Basename\n"
    if [ $existsLinkOnFile1 -eq 0 ]; then
      read -p "$file1Basename does not contain a link back, do you want to fix? [Y/y]" yes
      case "${yes}" in
      y | Y)
        # Append link on the file 1
        sed -i "1s/$/ ${file2}/" $2
        ;;
      esac
    fi
    exit 0
  fi

  # Link both files
  sed -i "1s/$/ ${file1}/" $3
  sed -i "1s/$/ ${file2}/" $2
}

case $1 in
-h | --help)
  print_help
  exit 0
  ;;
n | new)
  zet_new
  exit 0
  ;;
l | link)
  exit 0
  ;;
esac

print_help
