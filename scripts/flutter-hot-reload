#!/usr/bin/env bash

set -euo pipefail

# get pid of the running flutter process
pids=$(ps aux | grep '[f]lutter.*run' | awk '{print $2}')

# get the kitty window id of the running flutter process
kitty_ls_output=$(kitty @ --to=$KITTY_LISTEN_ON ls)

# # we're navigating to .[].tabs[].windows[] to reflect the structure in your output
# kitty_id=$(echo "$kitty_ls_output" | jq -r ".[].tabs[].windows[] | select(.foreground_processes[].pid == $pid) | .id")
#
# # send 'r\n' to the flutter process
# kitty @ --to=$KITTY_LISTEN_ON send-text --match=id:$kitty_id 'r\n'

# loop over each pid
while read -r pid; do
    # navigate to .[].tabs[].windows[] to extract matching kitty_ids
    kitty_ids=$(echo "$kitty_ls_output" | jq -r ".[].tabs[].windows[] | select(.foreground_processes[]?.pid == $pid) | .id")

    # loop over each kitty_id and send the 'r\n' text
    while read -r kitty_id; do
        if [[ -n "$kitty_id" ]]; then
            kitty @ --to=$KITTY_LISTEN_ON send-text --match=id:$kitty_id 'r\n'
        fi
    done <<< "$kitty_ids"
done <<< "$pids"
