#!/bin/bash

##
set -e

is_in_git_repo() {
  git rev-parse HEAD >/dev/null 2>&1
}

is_in_git_repo || (echo "You're not in a git repo" && exit 1)

files=$(
  git -c color.status=always status --short |
    fzf --disabled --multi --ansi --nth 2..,.. \
      --header 'Ctrl + e: Edit on vim, Ctrl + /: select all' \
      --bind 'ctrl-/:toggle-all' \
      --bind 'ctrl-e:execute(vim {2} &>/dev/tty)' \
      --preview '(git diff --color=always -- {-1} | sed 1,4d | bat --theme="OneHalfDark" --color=always --style=numbers)' |
    cut -c4- |
    sed 's/.* -> //'
)

[[ -z "$files" ]] && exit 1

rootPath=$(git rev-parse --show-toplevel)
cachedFiles="$(git diff --cached --name-only)"

readarray -t <<<"$files"

for file in "${MAPFILE[@]}"; do
  filePath="${rootPath}/${file}"
  if [[ "$cachedFiles" == *"$file"* ]]; then
    # The file is in the git cache
    modifiedCachedFiles="$(git diff --cached --name-only --diff-filter=M)"
    deletedCachedFiles="$(git diff --cached --name-only --diff-filter=D)"

    if [[ "$modifiedCachedFiles" == *"$file"* ]]; then
      git add "$filePath"
    elif [[ "$deletedCachedFiles" == *"$file"* ]]; then
      git remove "$filePath"
    else
      git reset -- "$file" >/dev/null
    fi

  else
    git add "$filePath"
  fi
done
