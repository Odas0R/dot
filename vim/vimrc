let skip_defaults_vim=1
set nocompatible                                                  " use VIM as Vi

set autoindent                                                    " automatically indent new lines
set autowrite                                                     " automatically write files when changing when multiple files open
set number                                                        " activate line numbers
set ruler                                                         " turn col and row position on in bottom right
set showmode                                                      " show command and insert mode

set textwidth=72                                                  " enough for line numbers + gutter within 80 standard
set tabstop=2                                                     " number of spaces that a <Tab> has
set shiftwidth=2                                                  " number of spaces on indentation
set softtabstop=2                                                 " read :help ðŸ˜‚
set numberwidth=2
set smartindent
set smarttab

set expandtab                                                     " replace tabs /w spaces
set nofixendofline                                                " stop vim from adding \n to files
set listchars=space:*,trail:*,nbsp:*,extends:>,precedes:<,tab:\|> " better ascii friendly list chars

set foldmethod=manual                                             " no folding
set nofoldenable                                                  " no folding

set icon

match ErrorMsg '\s\+$'                                            " mark trailing spaces as errors
set shortmess=aoOtTI                                              " avoid most of the 'Hit Enter ...' messages
set viminfo='20,<1000,s1000                                       " prevents truncated yanks, deletes, etc.
set omnifunc=syntaxcomplete#Complete                              " enable omni-completion

set path+=**                                                      " search recursively into directories
set wildmenu                                                      " better command-line completion
set wildignore+=**/node_modules/**                                " ignore node_modules

syntax on                                                         " syntax for plugins etc
filetype plugin on                                                " allow sensing the file type
set ttyfast                                                       " faster scrolling

set hidden                                                        " stop complaints about switching buffer with changes
set history=100                                                   " command history

" highlight search hits
set hlsearch
set incsearch
set linebreak
nnoremap <C-l> :nohl<CR><C-l>

" more risky, but cleaner
set nobackup
set noswapfile
set nowritebackup

" auto completion
set complete+=kspell                                              " spelling on autocomplete
set completeopt=menuone,longest                                   " config of vim autocomplete panel
set shortmess+=c                                                  " remove the autocomplete status bar

" not bracket matching or folding
let g:loaded_matchparen=1
set noshowmatch

" add portuguese dictionary
set spelllang+=pt_pt

" Return to last edit position when opening files
au BufReadPost *
      \ if line("'\"") > 0 && line("'\"") <= line("$") |
      \   exe "normal! g`\"" |
      \ endif

" ========
" Bindings
" ========
let mapleader = ","

nnoremap <leader>vu :so $HOME/.vimrc<CR>
nnoremap <leader>ve :e $HOME/.vimrc<CR>

" tab on visual selected
vmap <Tab> >gv
vmap <S-Tab> <gv


" save like an IDE BAD HABITSSSSSSSSSS
nnoremap <C-s> :w<cr>
inoremap <C-s> <esc>:w<cr>a

" <F NUM> Mappings
nnoremap <F1> :set number!<CR>
nnoremap <F2> :set spell!<CR>

" Linters <F3> -- make the mapping local to the <buffer> ðŸ˜¯
au FileType bash,sh nnoremap <buffer> <F3> :w<cr>:!clear && shellcheck %<cr>
au FileType html  nnoremap <buffer> <F3> :w<cr>:!clear && htmlhint %<cr>

" Run Code <F4>
au FileType sh nnoremap <buffer> <F4> :w<cr>:!clear && sh %<cr>
au FileType bash nnoremap <buffer> <F4> :w<cr>:!clear && bash %<cr>

" Formatters (using vim-autoformat, does a lot of work for me)

" this is complete sorcery, I managed to force consistent cursor
" placement on format.
" PS: The try-catch is to supress the undojoin error when you :w
fun! s:HtmlFormat()
  try
    let l:pos = getcurpos()
    silent execute 'undojoin'
    silent execute '%!js-beautify --type html -s 2'
    call setpos('.', l:pos)
  catch
  endtry
endfun

fun! s:Format()
  let search = @/
  let cursor_position = getpos('.')
  normal! H
  let window_position = getpos('.')
  call setpos('.', cursor_position)
  silent execute 'normal gg=G'
  let @/ = search
  call setpos('.', window_position)
  normal! zt
  call setpos('.', cursor_position)
endfun

au FileType html au BufWritePre <buffer> call s:HtmlFormat()
au FileType vim au BufWritePre <buffer> call s:Format()

" Plugins

call plug#begin()

Plug 'sonph/onehalf', { 'rtp': 'vim' }
Plug 'sheerun/vim-polyglot'
Plug 'plasticboy/vim-markdown'
Plug 'tpope/vim-commentary'                 " TODO: Create your own script...
Plug 'vitalk/vim-simple-todo'               " TODO: Create your own script...
Plug 'z0mbix/vim-shfmt', { 'for': 'sh' }
Plug 'vim-airline/vim-airline'
Plug 'mattn/emmet-vim'

call plug#end()

" colorscheme
set t_Co=256
colorscheme onehalfdark
let g:airline_theme='onehalfdark'

if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

" tabnine
set rtp+=~/.vim/tabnine-vim

" emmet w/ <Tab> TODO: Add more filetypes, example react, vue, ... etc.
augroup EmmetSettings
  autocmd! FileType html imap <tab> <plug>(emmet-expand-abbr)
augroup END

" shfmt
let g:shfmt_fmt_on_save = 1
let g:shfmt_extra_args = '-i 2' " spaces

" vim-commentary -- My favorite file type isn't supported!
" au FileType apache setlocal commentstring=#\ %s

" vim markdown
au FileType markdown set conceallevel=2 | set spell | set nonumber
let g:vim_markdown_no_extensions_in_markdown = 1
let g:vim_markdown_autowrite = 1
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_new_list_item_indent = 0
let g:vim_markdown_edit_url_in = 'current'
let g:netrw_browsex_viewer="cmd.exe /C start"

" Color Overrides
au FileType * hi SpellBad guifg=white guibg=lightred
au FileType * hi Error guifg=white guibg=lightred
au FileType * hi ErrorMsg guifg=white guibg=lightred

au FileType markdown,pandoc hi Title cterm=bold ctermfg=magenta ctermbg=NONE
au FileType markdown,pandoc hi htmlBold cterm=bold ctermfg=blue ctermbg=NONE
au FileType markdown,pandoc hi htmlItalic cterm=italic ctermfg=yellow ctermbg=NONE
au FileType markdown,pandoc hi htmlLink ctermfg=cyan guifg=cyan cterm=underline gui=underline ctermbg=NONE
