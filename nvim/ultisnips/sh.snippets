priority -50

snippet #! "#!/bin/bash" b
#!/bin/bash
$0
endsnippet

snippet safe "safe bash options" b
set -euo pipefail

# set -x
`!p snip.rv ='\n' `
endsnippet

snippet /case|sw(itch)?/ "case .. esac (case)" rb
case ${1:word} in
	${2:pattern} )
		${0:${VISUAL}};;
esac
endsnippet

snippet elif "elif .. (elif)" b
elif ${2:[[ ${1:condition} ]]}; then
	${0:${VISUAL}}
endsnippet

snippet for "for ... done (for)" b
for (( i = 0; i < ${1:10}; i++ )); do
	${0:${VISUAL}}
done
endsnippet

snippet forin "for ... in ... done (forin)" b
for ${1:i}${2/.+/ in /}${2:words}; do
	${0:${VISUAL}}
done
endsnippet

snippet if "if ... then (if)" b
if [[ ${1:condition} ]]; then
	${0:${VISUAL}}
fi
endsnippet

snippet fn "function() {...}" b
${1:function} () {
	${0:${VISUAL}}
}
endsnippet

snippet [[ "if args" A
[[ $0 ]]
endsnippet

snippet cmd "check if command exists" b
if [[ ! -x "$(command -v $1)" ]]; then
	echo "You need to install $1"
	exit 1
fi
endsnippet

snippet os "check if command exists" b
declare DISTRO

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  DISTRO=$(awk -F= '/^NAME/{print \${2}}' /etc/os-release)

  if [[ ${DISTRO} = "Ubuntu"* ]]; then
    if uname -a | grep -q '^Linux.*Microsoft'; then
      # ubuntu via WSL Windows Subsystem for Linux
      echo "NOT IMPLEMENTED"
    else
      # native ubuntu
      echo "NOT IMPLEMENTED"
    fi
  elif [[ ${DISTRO} = "Debian"* ]]; then
    # debian
    echo "NOT IMPLEMENTED"
  fi
elif [[ "$OSTYPE" == "darwin"* ]]; then
  # macOS OSX
  echo "NOT IMPLEMENTED"
fi
endsnippet

snippet cli "boilerplate when creating a CLI" b
firstCommand="\${1:-help}"

_help() {
  printf "
This is an example of a help command

Commands:
  help             Show help commands

"
}

case "$firstCommand" in
help)
  _help
  exit 0
  ;;
e | example)
  shift
  echo "$@"
  exit 0
  ;;
esac
endsnippet

snippet color "variables for setting colors on echo -e" b
declare black="\e[30m"
declare red="\e[31m"
declare green="\e[32m"
declare yellow="\e[33m"
declare blue="\e[34m"
declare magenta="\e[35m"
declare cyan="\e[36m"
declare white="\e[37m"
declare reset="\e[0m"
endsnippet

snippet color:bold "variables for setting bold colors on echo -e" b
declare black="\e[1;30m"
declare red="\e[1;31m"
declare green="\e[1;32m"
declare yellow="\e[1;33m"
declare blue="\e[1;34m"
declare magenta="\e[1;35m"
declare cyan="\e[1;36m"
declare white="\e[1;37m"
declare reset="\e[0m"
endsnippet

# vim:ft=snippets:
